package gof.designpatterns.structural.facade.security;

/**
 * Design Patterns: Elements of Reusable Object-Oriented Software
 * by Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides.
 *
 * Шаблон позволяет упростить доступ к сложной системе, объединив несколько действий различных классов под одним
 * интерфейсом и делегировав ему обязанности отправлять сообщения этим классам. Клиент системы знает только об интерфейсе
 * фасада и ничего не знает о структуре классов и последовательности вызовов, приводящих его к желаемому результату.
 * В роли интерфейса в общем случае будет выступать совокупность классов, а не один класс со множеством обязанностей.
 * Снижается число связей клиентского класса с системой. Каждый метод фасада решает свою конкретную задачу,
 * упрощая клиенту обращение к системе. При реализации фасада не следует допускать прямое обращение класса-клиента
 * к классу системы, минуя фасад.
 */
public class ClientRunner {

    public static void main(String[] args) {
        Facade facade = new Facade();
        facade.generate();
    }
}